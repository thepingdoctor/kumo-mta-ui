events {
  worker_connections 2048;
  use epoll;
  multi_accept on;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  # Logging
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for" '
                  'rt=$request_time uct="$upstream_connect_time" '
                  'uht="$upstream_header_time" urt="$upstream_response_time"';

  access_log /var/log/nginx/access.log main;
  error_log /var/log/nginx/error.log warn;

  # Performance optimizations
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  server_tokens off;

  # Buffer sizes
  client_body_buffer_size 10K;
  client_header_buffer_size 1k;
  client_max_body_size 8m;
  large_client_header_buffers 2 1k;

  # Timeouts
  client_body_timeout 12;
  client_header_timeout 12;
  send_timeout 10;

  # Gzip compression
  gzip on;
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_min_length 256;
  gzip_types
    text/plain
    text/css
    text/xml
    text/javascript
    application/json
    application/javascript
    application/xml+rss
    application/rss+xml
    application/atom+xml
    application/x-javascript
    application/x-font-ttf
    font/opentype
    font/truetype
    image/svg+xml
    image/x-icon;

  # Security headers
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;
  add_header Permissions-Policy "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()" always;

  # Rate limiting
  limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
  limit_req_zone $binary_remote_addr zone=api:10m rate=50r/s;
  limit_conn_zone $binary_remote_addr zone=addr:10m;

  # SSL configuration
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
  ssl_prefer_server_ciphers off;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 10m;
  ssl_session_tickets off;
  ssl_stapling on;
  ssl_stapling_verify on;

  # Redirect HTTP to HTTPS
  server {
    listen 80;
    server_name _;

    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    # Health check (allow HTTP)
    location /health {
      access_log off;
      return 200 "healthy\n";
      add_header Content-Type text/plain;
    }

    # Redirect all other traffic to HTTPS
    location / {
      return 301 https://$host$request_uri;
    }
  }

  # HTTPS server
  server {
    listen 443 ssl http2;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;

    # SSL certificates
    ssl_certificate /etc/nginx/certs/live/kumomta/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/live/kumomta/privkey.pem;
    ssl_trusted_certificate /etc/nginx/certs/live/kumomta/chain.pem;

    # HSTS (uncomment after SSL is working)
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # CSP (adjust based on your needs)
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: https:; frame-ancestors 'self';" always;

    # Rate limiting
    limit_req zone=general burst=20 nodelay;
    limit_conn addr 10;

    # Health check endpoint
    location /health {
      access_log off;
      return 200 "healthy\n";
      add_header Content-Type text/plain;
    }

    # Metrics endpoint (restrict access)
    location /metrics {
      access_log off;
      allow 172.28.0.0/16; # Docker network
      allow 127.0.0.1;
      deny all;
      return 200 "metrics endpoint\n";
      add_header Content-Type text/plain;
    }

    # SPA routing - all requests go to index.html
    location / {
      try_files $uri $uri/ /index.html;
      expires -1;
      add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
    }

    # API proxy with rate limiting
    location /api/ {
      limit_req zone=api burst=100 nodelay;

      proxy_pass http://kumomta-backend:8000/api/;
      proxy_http_version 1.1;

      # Headers
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $server_name;

      # Timeouts
      proxy_connect_timeout 60s;
      proxy_send_timeout 60s;
      proxy_read_timeout 60s;

      # Buffering
      proxy_buffering on;
      proxy_buffer_size 4k;
      proxy_buffers 8 4k;
      proxy_busy_buffers_size 8k;

      # Cache bypass
      proxy_cache_bypass $http_upgrade;

      # Error handling
      proxy_intercept_errors on;
      error_page 502 503 504 /50x.html;
    }

    # WebSocket proxy
    location /ws/ {
      proxy_pass http://kumomta-backend:8000/ws/;
      proxy_http_version 1.1;

      # WebSocket headers
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # WebSocket timeouts
      proxy_connect_timeout 7d;
      proxy_send_timeout 7d;
      proxy_read_timeout 7d;

      # Disable buffering for WebSocket
      proxy_buffering off;
    }

    # Cache static assets aggressively
    location ~* \.(jpg|jpeg|png|gif|ico|svg)$ {
      expires 1y;
      add_header Cache-Control "public, immutable";
      access_log off;
    }

    location ~* \.(css|js)$ {
      expires 1y;
      add_header Cache-Control "public, immutable";
      access_log off;
    }

    location ~* \.(woff|woff2|ttf|eot)$ {
      expires 1y;
      add_header Cache-Control "public, immutable";
      access_log off;
      add_header Access-Control-Allow-Origin *;
    }

    # Error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
      root /usr/share/nginx/html;
    }
  }
}
